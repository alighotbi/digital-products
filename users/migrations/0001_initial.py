# Generated by Django 4.2 on 2024-12-31 14:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required, 20 max characters, letters, letter, numbers and symbols', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Username must be alphanumeric or contain underscores.', regex='^[a-zA-Z0-9_]+$')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('phone_number', models.BigIntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format:09123456789', regex='^\\+?09?\\d{9,14}$')], verbose_name='mobile number')),
                ('is_staff', models.BooleanField(default=False, help_text='pass', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='pass', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_seen', models.DateTimeField(null=True, verbose_name='last seen date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(choices=[('tehran', 'Tehran'), ('mashhad', 'Mashhad'), ('isfahan', 'Isfahan'), ('shiraz', 'Shiraz'), ('tabriz', 'Tabriz'), ('karaj', 'Karaj'), ('qom', 'Qom'), ('ahvaz', 'Ahvaz'), ('kermanshah', 'Kermanshah'), ('rasht', 'Rasht'), ('hamedan', 'Hamedan'), ('ardabil', 'Ardabil'), ('kerman', 'Kerman'), ('yazd', 'Yazd'), ('zahedan', 'Zahedan'), ('urmia', 'Urmia'), ('arak', 'Arak'), ('sari', 'Sari'), ('bandar_abbas', 'Bandar Abbas'), ('bushehr', 'Bushehr')], default='tehran', max_length=30, verbose_name='city')),
                ('is_valid', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick_name', models.CharField(blank=True, max_length=50, verbose_name='Nickname')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='avatar')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female'), (3, 'prefer not to say')], help_text='This is a help text!', verbose_name='gender')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.province', verbose_name='province')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_uuid', models.UUIDField(null=True, verbose_name='Device UUID')),
                ('last_login', models.DateTimeField(null=True, verbose_name='last login date')),
                ('device_type', models.SmallIntegerField(choices=[(1, 'web'), (2, 'ios'), (3, 'android')], default=1)),
                ('device_model', models.CharField(blank=True, max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
                'db_table': 'user_devices',
                'unique_together': {('user', 'device_uuid')},
            },
        ),
    ]
